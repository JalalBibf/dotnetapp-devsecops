name: Build and deploy ASP.Net Core app to an Azure Server

env:
  DOTNET_VERSION: '7.0.102'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # - name: Build with dotnet
      #   run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -o ${{env.DOTNET_ROOT}}/output

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: output-${{github.run_number}}
          path: ${{env.DOTNET_ROOT}}/output/*

  deploy:
    name: Deploy application to server
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: output-${{github.run_number}}
          path: output

      - name: Deploy the Build to IIS Server
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: output-${{github.run_number}}                                          
          remote: 'output/'                                               
          host: ${{secrets.HOST}}                                  
          port: ${{secrets.PORT}}
          user: ${{secrets.USER}}
          password: ${{secrets.PASSWORD}}
          # pre_upload: rmdir /s /q output
          post_upload: iisreset /stop && xcopy /s /y output C:/inetpub/wwwroot/ && iisreset /start
          ssh_options: -o StrictHostKeyChecking=no
          scp_options: -v

      # - name: Deploy to Azure Web App
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      #     package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
